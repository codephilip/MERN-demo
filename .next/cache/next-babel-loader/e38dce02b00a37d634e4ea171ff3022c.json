{"ast":null,"code":"import Product from \"../../models/Product\";\nimport connectDb from \"../../utils/connectDb\";\nconnectDb();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"GET\":\n      await handleGetRequest(req, res);\n      break;\n\n    case \"POST\":\n      await handlePostRequest(req, res);\n      break;\n\n    case \"DELETE\":\n      await handleDeleteRequest(req, res);\n      break;\n\n    default:\n      res.status(405).send(`Method ${req.method} not allowed`);\n      break;\n  }\n});\n\nasync function handleGetRequest(req, res) {\n  const {\n    _id\n  } = req.query;\n  const product = await Product.findOne({\n    _id\n  });\n  res.status(200).json(product);\n}\n\nasync function handlePostRequest(req, res) {\n  const {\n    type,\n    price,\n    description,\n    mediaUrl\n  } = req.body;\n\n  try {\n    if (!name || !price || !description || !mediaUrl) {\n      return res.status(422).send(\"Product missing one or more fields\");\n    }\n\n    const budget = await new Budget({\n      name,\n      price,\n      description,\n      mediaUrl\n    }).save();\n    res.status(201).json(product);\n  } catch (error) {\n    console.error(error);\n    res.status(500).send(\"Server error in creating product\");\n  }\n}\n\nasync function handleDeleteRequest(req, res) {\n  const {\n    _id\n  } = req.query;\n  await Product.findOneAndDelete({\n    _id\n  });\n  res.status(204).json({});\n}","map":{"version":3,"sources":["C:\\Users\\phili\\Documents\\Coding\\MERN\\11.20.20MERN\\MERN\\pages\\api\\budget.js"],"names":["Product","connectDb","req","res","method","handleGetRequest","handlePostRequest","handleDeleteRequest","status","send","_id","query","product","findOne","json","type","price","description","mediaUrl","body","name","budget","Budget","save","error","console","findOneAndDelete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEAA,SAAS;AAET,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,UAAQD,GAAG,CAACE,MAAZ;AACE,SAAK,KAAL;AACE,YAAMC,gBAAgB,CAACH,GAAD,EAAMC,GAAN,CAAtB;AACA;;AACF,SAAK,MAAL;AACE,YAAMG,iBAAiB,CAACJ,GAAD,EAAMC,GAAN,CAAvB;AACA;;AACF,SAAK,QAAL;AACE,YAAMI,mBAAmB,CAACL,GAAD,EAAMC,GAAN,CAAzB;AACA;;AACF;AACEA,MAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAsB,UAASP,GAAG,CAACE,MAAO,cAA1C;AACA;AAZJ;AAcD,CAfD;;AAiBA,eAAeC,gBAAf,CAAgCH,GAAhC,EAAqCC,GAArC,EAA0C;AACxC,QAAM;AAAEO,IAAAA;AAAF,MAAUR,GAAG,CAACS,KAApB;AACA,QAAMC,OAAO,GAAG,MAAMZ,OAAO,CAACa,OAAR,CAAgB;AAAEH,IAAAA;AAAF,GAAhB,CAAtB;AACAP,EAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqBF,OAArB;AACD;;AAED,eAAeN,iBAAf,CAAiCJ,GAAjC,EAAsCC,GAAtC,EAA2C;AACzC,QAAM;AAAEY,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,WAAf;AAA4BC,IAAAA;AAA5B,MAAyChB,GAAG,CAACiB,IAAnD;;AACA,MAAI;AACF,QAAI,CAACC,IAAD,IAAS,CAACJ,KAAV,IAAmB,CAACC,WAApB,IAAmC,CAACC,QAAxC,EAAkD;AAChD,aAAOf,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,oCAArB,CAAP;AACD;;AACD,UAAMY,MAAM,GAAG,MAAM,IAAIC,MAAJ,CAAW;AAC9BF,MAAAA,IAD8B;AAE9BJ,MAAAA,KAF8B;AAG9BC,MAAAA,WAH8B;AAI9BC,MAAAA;AAJ8B,KAAX,EAKlBK,IALkB,EAArB;AAMApB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqBF,OAArB;AACD,GAXD,CAWE,OAAOY,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACArB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kCAArB;AACD;AACF;;AAED,eAAeF,mBAAf,CAAmCL,GAAnC,EAAwCC,GAAxC,EAA6C;AAC3C,QAAM;AAAEO,IAAAA;AAAF,MAAUR,GAAG,CAACS,KAApB;AACA,QAAMX,OAAO,CAAC0B,gBAAR,CAAyB;AAAEhB,IAAAA;AAAF,GAAzB,CAAN;AACAP,EAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqB,EAArB;AACD","sourcesContent":["import Product from \"../../models/Product\";\r\nimport connectDb from \"../../utils/connectDb\";\r\n\r\nconnectDb();\r\n\r\nexport default async (req, res) => {\r\n  switch (req.method) {\r\n    case \"GET\":\r\n      await handleGetRequest(req, res);\r\n      break;\r\n    case \"POST\":\r\n      await handlePostRequest(req, res);\r\n      break;\r\n    case \"DELETE\":\r\n      await handleDeleteRequest(req, res);\r\n      break;\r\n    default:\r\n      res.status(405).send(`Method ${req.method} not allowed`);\r\n      break;\r\n  }\r\n};\r\n\r\nasync function handleGetRequest(req, res) {\r\n  const { _id } = req.query;\r\n  const product = await Product.findOne({ _id });\r\n  res.status(200).json(product);\r\n}\r\n\r\nasync function handlePostRequest(req, res) {\r\n  const { type, price, description, mediaUrl } = req.body;\r\n  try {\r\n    if (!name || !price || !description || !mediaUrl) {\r\n      return res.status(422).send(\"Product missing one or more fields\");\r\n    }\r\n    const budget = await new Budget({\r\n      name,\r\n      price,\r\n      description,\r\n      mediaUrl\r\n    }).save();\r\n    res.status(201).json(product);\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).send(\"Server error in creating product\");\r\n  }\r\n}\r\n\r\nasync function handleDeleteRequest(req, res) {\r\n  const { _id } = req.query;\r\n  await Product.findOneAndDelete({ _id });\r\n  res.status(204).json({});\r\n}\r\n"]},"metadata":{},"sourceType":"module"}