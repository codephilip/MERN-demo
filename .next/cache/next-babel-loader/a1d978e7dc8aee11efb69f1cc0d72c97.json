{"ast":null,"code":"import mongoose, { model } from 'mongoose';\nimport jwt from 'jsonwebtoken';\nimport Budget from '../../models/Budget';\nimport connectDb from '../../utils/connectDb';\nconnectDb(); // export default async(req,res)=>{\n//     switch(req.method){\n//         case \"GET\":\n//             await handleGetRequest(req,res);\n//             break;\n//         case \"PUT\":\n//             await handlePutRequest(req,res);\n//             break;\n//         default:\n//             res.status(405).send(`Method ${req.method} not allowed`)\n//             break;\n//     }\n// }\n\nexport default (async (req, res) => {\n  if (!(\"authorization\" in req.headers)) {\n    return res.status(401).send('No Auth Token');\n  }\n\n  try {\n    const {\n      userId\n    } = jwt.verify(req.headers.authorization, process.env.JWT_SECRET);\n    const budget = await Budget.findOne({\n      user: userId\n    }); //.populate({\n    //     path: \"budget.type\",\n    //     model: \"Name\" //err\n    // })\n\n    res.status(200).json(budget);\n  } catch (error) {\n    console.error(error);\n    res.status(404).send(\"Please login again.\");\n  }\n}); // async handlePutRequest(req,res){\n//     const \n// }","map":{"version":3,"sources":["C:\\Users\\phili\\Documents\\Coding\\MERN\\11.20.20MERN\\MERN\\pages\\api\\budget.js"],"names":["mongoose","model","jwt","Budget","connectDb","req","res","headers","status","send","userId","verify","authorization","process","env","JWT_SECRET","budget","findOne","user","json","error","console"],"mappings":"AAAA,OAAOA,QAAP,IAAmBC,KAAnB,QAAgC,UAAhC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEAA,SAAS,G,CAGT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAKA,gBAAe,OAAMC,GAAN,EAAUC,GAAV,KAAgB;AAC3B,MAAG,EAAE,mBAAmBD,GAAG,CAACE,OAAzB,CAAH,EAAqC;AACjC,WAAOD,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,eAArB,CAAP;AACH;;AACD,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAWR,GAAG,CAACS,MAAJ,CAAWN,GAAG,CAACE,OAAJ,CAAYK,aAAvB,EAAsCC,OAAO,CAACC,GAAR,CAAYC,UAAlD,CAAjB;AACA,UAAMC,MAAM,GAAG,MAAMb,MAAM,CAACc,OAAP,CAAe;AAACC,MAAAA,IAAI,EAAER;AAAP,KAAf,CAArB,CAFD,CAGC;AACA;AACA;AACA;;AAEAJ,IAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBW,IAAhB,CAAqBH,MAArB;AAEH,GAVD,CAUC,OAAMI,KAAN,EAAY;AACTC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAd,IAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,qBAArB;AACH;AACJ,CAlBD,E,CAoBA;AACA;AACA","sourcesContent":["import mongoose, { model } from 'mongoose'\r\nimport jwt from 'jsonwebtoken'\r\nimport Budget from '../../models/Budget'\r\nimport connectDb from '../../utils/connectDb'\r\n\r\nconnectDb();\r\n\r\n\r\n// export default async(req,res)=>{\r\n//     switch(req.method){\r\n//         case \"GET\":\r\n//             await handleGetRequest(req,res);\r\n//             break;\r\n//         case \"PUT\":\r\n//             await handlePutRequest(req,res);\r\n//             break;\r\n//         default:\r\n//             res.status(405).send(`Method ${req.method} not allowed`)\r\n//             break;\r\n\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\nexport default async(req,res)=>{\r\n    if(!(\"authorization\" in req.headers)){\r\n        return res.status(401).send('No Auth Token');\r\n    }\r\n    try{\r\n        const {userId} = jwt.verify(req.headers.authorization, process.env.JWT_SECRET)\r\n        const budget = await Budget.findOne({user: userId})\r\n        //.populate({\r\n        //     path: \"budget.type\",\r\n        //     model: \"Name\" //err\r\n        // })\r\n\r\n        res.status(200).json(budget)\r\n\r\n    }catch(error){\r\n        console.error(error)\r\n        res.status(404).send(\"Please login again.\")\r\n    }\r\n}\r\n\r\n// async handlePutRequest(req,res){\r\n//     const \r\n// }"]},"metadata":{},"sourceType":"module"}